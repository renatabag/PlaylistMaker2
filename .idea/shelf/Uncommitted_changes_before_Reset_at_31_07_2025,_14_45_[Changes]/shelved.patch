Index: app/src/main/java/com/example/playlistmaker/DI/RepositoryModule.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.playlistmaker.DI\n\nimport com.example.playlistmaker.data.repositories.PlayerRepositoryImpl\nimport com.example.playlistmaker.data.repositories.SearchHistoryRepositoryImpl\nimport com.example.playlistmaker.data.repositories.SettingsRepositoryImpl\nimport com.example.playlistmaker.data.repositories.TracksRepositoryImpl\nimport com.example.playlistmaker.domain.repositories.PlayerRepository\nimport com.example.playlistmaker.domain.repositories.SearchHistoryRepository\nimport com.example.playlistmaker.domain.repositories.SettingsRepository\nimport com.example.playlistmaker.domain.repositories.TracksRepository\nimport org.koin.dsl.module\n\nval repositoryModule = module {\n    single<PlayerRepository> { PlayerRepositoryImpl(get()) }\n    single<SearchHistoryRepository>{ SearchHistoryRepositoryImpl(get(),get()) }\n    single<SettingsRepository> { SettingsRepositoryImpl(get()) }\n    single<TracksRepository>{ TracksRepositoryImpl(get(),get()) }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/playlistmaker/DI/RepositoryModule.kt b/app/src/main/java/com/example/playlistmaker/DI/RepositoryModule.kt
--- a/app/src/main/java/com/example/playlistmaker/DI/RepositoryModule.kt	(revision 59dac1da4c9d31be82ba8aeb02cd01045fe65364)
+++ b/app/src/main/java/com/example/playlistmaker/DI/RepositoryModule.kt	(date 1753962319380)
@@ -6,8 +6,6 @@
 import com.example.playlistmaker.data.repositories.TracksRepositoryImpl
 import com.example.playlistmaker.domain.repositories.PlayerRepository
 import com.example.playlistmaker.domain.repositories.SearchHistoryRepository
-import com.example.playlistmaker.domain.repositories.SettingsRepository
-import com.example.playlistmaker.domain.repositories.TracksRepository
 import org.koin.dsl.module
 
 val repositoryModule = module {
Index: app/src/main/java/com/example/playlistmaker/domain/repositories/SettingsRepository.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.playlistmaker.domain.repositories\n\ninterface SettingsRepository {\n    suspend fun getThemeSettings(): Boolean\n    suspend fun updateThemeSettings(isDarkTheme: Boolean)\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/playlistmaker/domain/repositories/SettingsRepository.kt b/app/src/main/java/com/example/playlistmaker/domain/repositories/SettingsRepository.kt
--- a/app/src/main/java/com/example/playlistmaker/domain/repositories/SettingsRepository.kt	(revision 59dac1da4c9d31be82ba8aeb02cd01045fe65364)
+++ b/app/src/main/java/com/example/playlistmaker/domain/repositories/SettingsRepository.kt	(date 1753962267491)
@@ -1,6 +1,0 @@
-package com.example.playlistmaker.domain.repositories
-
-interface SettingsRepository {
-    suspend fun getThemeSettings(): Boolean
-    suspend fun updateThemeSettings(isDarkTheme: Boolean)
-}
\ No newline at end of file
Index: app/src/main/java/com/example/playlistmaker/domain/repositories/TracksRepository.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.playlistmaker.domain.repositories\n\nimport com.example.playlistmaker.domain.models.Track\n\ninterface TracksRepository {\n    suspend fun searchTracks(query: String): List<Track>\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/playlistmaker/domain/repositories/TracksRepository.kt b/app/src/main/java/com/example/playlistmaker/domain/repositories/TracksRepository.kt
--- a/app/src/main/java/com/example/playlistmaker/domain/repositories/TracksRepository.kt	(revision 59dac1da4c9d31be82ba8aeb02cd01045fe65364)
+++ b/app/src/main/java/com/example/playlistmaker/domain/repositories/TracksRepository.kt	(date 1753962267497)
@@ -1,7 +1,0 @@
-package com.example.playlistmaker.domain.repositories
-
-import com.example.playlistmaker.domain.models.Track
-
-interface TracksRepository {
-    suspend fun searchTracks(query: String): List<Track>
-}
\ No newline at end of file
Index: app/src/main/java/com/example/playlistmaker/Track_player.kt
===================================================================
diff --git a/app/src/main/java/com/example/playlistmaker/Track_player.kt b/app/src/main/java/com/example/playlistmaker/Track_player.kt
deleted file mode 100644
--- a/app/src/main/java/com/example/playlistmaker/Track_player.kt	(revision 59dac1da4c9d31be82ba8aeb02cd01045fe65364)
+++ /dev/null	(revision 59dac1da4c9d31be82ba8aeb02cd01045fe65364)
@@ -1,186 +0,0 @@
-package com.example.playlistmaker
-
-import Track
-import android.media.MediaPlayer
-import android.os.Bundle
-import android.os.Handler
-import android.os.Looper
-import android.widget.Button
-import android.widget.EditText
-import android.widget.ImageButton
-import android.widget.TextView
-import androidx.appcompat.app.AppCompatActivity
-import com.bumptech.glide.Glide
-
-class Track_player : AppCompatActivity() {
-
-    companion object {
-        private const val STATE_DEFAULT = 0
-        private const val STATE_PREPARED = 1
-        private const val STATE_PLAYING = 2
-        private const val STATE_PAUSED = 3
-        private const val UPDATE_INTERVAL = 1000L
-    }
-
-    private var playerState = STATE_DEFAULT
-    private lateinit var play: ImageButton
-    private lateinit var mediaPlayer: MediaPlayer
-    private lateinit var track: Track
-    private val handler = Handler(Looper.getMainLooper())
-    private var updateTimeRunnable: Runnable? = null
-    private var trackDuration: Long = 0
-    private var startTime: Long = 0
-    private var elapsedTimeBeforePause: Long = 0 // Для сохранения позиции при паузе
-
-    override fun onCreate(savedInstanceState: Bundle?) {
-        super.onCreate(savedInstanceState)
-        setContentView(R.layout.track_player)
-
-        track = intent.getParcelableExtra<Track>("TRACK") ?: run {
-            finish()
-            return
-        }
-
-        displayTrackDetails(track)
-        trackDuration = track.trackTimeMillis ?: 0
-
-        val backButton = findViewById<ImageButton>(R.id.menu_button)
-        backButton.setOnClickListener {
-            handleBackPressed()
-        }
-
-        play = findViewById(R.id.pause)
-        play.isEnabled = false
-
-        mediaPlayer = MediaPlayer()
-        preparePlayer()
-
-        play.setOnClickListener { playbackControl() }
-    }
-
-    private fun handleBackPressed() {
-        if (playerState == STATE_PLAYING) {
-            pausePlayer()
-            // Даем время для обработки паузы перед закрытием
-            handler.postDelayed({
-                finish()
-            }, 100)
-        } else {
-            finish()
-        }
-    }
-
-    private fun preparePlayer() {
-        try {
-            val url = track.previewUrl ?: run {
-                play.isEnabled = false
-                return
-            }
-
-            mediaPlayer.setDataSource(url)
-            mediaPlayer.prepareAsync()
-            mediaPlayer.setOnPreparedListener {
-                play.isEnabled = true
-                playerState = STATE_PREPARED
-                play.setImageResource(R.drawable.pause)
-                trackDuration = mediaPlayer.duration.toLong()
-
-                findViewById<TextView>(R.id.track_time_now).text = "00:00"
-            }
-            mediaPlayer.setOnCompletionListener {
-                playerState = STATE_PREPARED
-                play.setImageResource(R.drawable.pause)
-                stopTimer()
-
-                findViewById<TextView>(R.id.track_time_now).text = "00:00"
-                elapsedTimeBeforePause = 0
-            }
-            mediaPlayer.setOnErrorListener { _, _, _ ->
-                play.isEnabled = false
-                playerState = STATE_DEFAULT
-                true
-            }
-        } catch (e: Exception) {
-            e.printStackTrace()
-            play.isEnabled = false
-        }
-    }
-
-    private fun playbackControl() {
-        when(playerState) {
-            STATE_PLAYING -> pausePlayer()
-            STATE_PREPARED, STATE_PAUSED -> startPlayer()
-        }
-    }
-
-    private fun startTimer() {
-        startTime = System.currentTimeMillis() - elapsedTimeBeforePause
-
-        updateTimeRunnable = object : Runnable {
-            override fun run() {
-                val elapsed = System.currentTimeMillis() - startTime
-                findViewById<TextView>(R.id.track_time_now).text = Track.formatTrackTime(elapsed)
-
-                if (playerState == STATE_PLAYING) {
-                    handler.postDelayed(this, UPDATE_INTERVAL)
-                }
-            }
-        }
-        handler.post(updateTimeRunnable!!)
-    }
-
-    private fun stopTimer() {
-        elapsedTimeBeforePause = System.currentTimeMillis() - startTime
-        updateTimeRunnable?.let {
-            handler.removeCallbacks(it)
-            updateTimeRunnable = null
-        }
-    }
-
-    private fun startPlayer() {
-        mediaPlayer.seekTo(elapsedTimeBeforePause.toInt())
-        mediaPlayer.start()
-        playerState = STATE_PLAYING
-        play.setImageResource(R.drawable.play)
-        startTimer()
-    }
-
-    private fun pausePlayer() {
-        mediaPlayer.pause()
-        playerState = STATE_PAUSED
-        play.setImageResource(R.drawable.pause)
-        stopTimer()
-        elapsedTimeBeforePause = System.currentTimeMillis() - startTime
-    }
-
-    override fun onPause() {
-        super.onPause()
-        if (playerState == STATE_PLAYING) {
-            pausePlayer()
-        }
-    }
-
-    override fun onDestroy() {
-        super.onDestroy()
-        stopTimer()
-        mediaPlayer.release()
-    }
-
-    private fun displayTrackDetails(track: Track) {
-        findViewById<TextView>(R.id.track_name).text = track.trackName
-        findViewById<TextView>(R.id.artist_name).text = track.artistName
-        findViewById<TextView>(R.id.track_time).text = Track.formatTrackTime(track.trackTimeMillis ?: 0)
-        findViewById<TextView>(R.id.track_time_now).text = "00:00"
-        findViewById<TextView>(R.id.year_label_text).text = track.getReleaseYear()
-        findViewById<TextView>(R.id.genre_label_text).text = track.primaryGenreName
-        findViewById<TextView>(R.id.country_label_text).text = track.country
-
-        val artworkUrl = track.artworkUrl100?.replace("100x100bb.jpg", "512x512bb.jpg")
-        Glide.with(this)
-            .load(artworkUrl)
-            .placeholder(R.drawable.placeholder_track)
-            .error(R.drawable.error)
-            .centerCrop()
-            .into(findViewById(R.id.item_image))
-    }
-}
\ No newline at end of file
Index: app/src/main/res/layout/activity_searcch.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><LinearLayout\n    style=\"@style/Base.Theme.PlaylistMakerr\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:orientation=\"vertical\"\n    xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    android:background=\"@color/background\">\n\n    <Button\n        android:id=\"@+id/button_back\"\n        style=\"@style/primary_settings_back_button\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"@string/search_button_text\"\n        app:icon=\"@drawable/baseline_arrow_back_24\"\n        app:iconSize=\"@dimen/button_size\"\n        android:background=\"@android:color/transparent\"\n        app:iconPadding=\"@dimen/button_size\" />\n\n    <FrameLayout\n        android:padding=\"@dimen/activity_search_padding\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:background=\"@color/background\">\n\n        <EditText\n            android:id=\"@+id/inputEditText\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"wrap_content\"\n            android:background=\"@drawable/rectangle\"\n            android:textColor=\"@color/black\"\n            android:drawableStart=\"@drawable/baseline_search_24\"\n            android:drawablePadding=\"@dimen/radius\"\n            android:drawableTint=\"@color/rectangle_text_color\"\n            android:hint=\"@string/input_hint\"\n            android:textColorHint=\"@color/rectangle_text_color\"\n            android:inputType=\"text\"\n            android:padding=\"@dimen/radius\"\n            android:textCursorDrawable=\"@color/blue\"\n            android:imeOptions=\"actionDone\"\n            android:singleLine=\"true\" />\n\n        <ImageView\n            android:id=\"@+id/clearIcon\"\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            android:layout_gravity=\"end|center_vertical\"\n            android:src=\"@drawable/baseline_clear_24\"\n            android:visibility=\"gone\"\n            android:background=\"@android:color/transparent\"\n            android:contentDescription=\"@string/clear_input\"\n            app:tint=\"@color/dark_grey\"\n            android:paddingEnd=\"@dimen/radius\" />\n    </FrameLayout>\n\n    <TextView\n        android:id=\"@+id/historyTitle\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"@string/history_search\"\n        android:textSize=\"@dimen/text_error\"\n        android:textStyle=\"bold\"\n        android:fontFamily=\"@font/ys_display_medium\"\n        android:textColor=\"@color/dark_white\"\n        android:visibility=\"gone\"\n        android:layout_marginTop=\"@dimen/history_top_padding\"\n        android:layout_marginBottom=\"@dimen/history_end_padding\"\n        android:gravity=\"center_horizontal\"\n        android:padding=\"@dimen/activity_search_padding\"\n        android:background=\"@color/background\" />\n\n    <FrameLayout\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\">\n\n        <com.google.android.material.progressindicator.CircularProgressIndicator\n            android:id=\"@+id/progressBar\"\n            android:layout_width=\"@dimen/circular_size\"\n            android:layout_height=\"@dimen/circular_size\"\n            android:indeterminate=\"true\"\n            android:visibility=\"gone\"\n            android:layout_marginTop=\"@dimen/circular_top\"\n            android:layout_gravity=\"center_horizontal|top\"\n            app:indicatorColor=\"@color/blue\"/>\n\n        <ScrollView\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"match_parent\"\n            android:fillViewport=\"true\">\n\n            <LinearLayout\n                android:layout_width=\"match_parent\"\n                android:layout_height=\"wrap_content\"\n                android:orientation=\"vertical\"\n                android:background=\"@color/background\">\n\n                <androidx.recyclerview.widget.RecyclerView\n                    android:id=\"@+id/tracksList\"\n                    android:layout_width=\"match_parent\"\n                    android:layout_height=\"wrap_content\"\n                    android:background=\"@color/white\"\n                    android:backgroundTint=\"@color/background\"\n                    android:visibility=\"visible\" />\n\n                <Button\n                    android:id=\"@+id/clearHistoryButton\"\n                    android:layout_width=\"wrap_content\"\n                    android:layout_height=\"wrap_content\"\n                    android:text=\"@string/clean_history\"\n                    android:visibility=\"gone\"\n                    android:layout_marginTop=\"@dimen/button_size\"\n                    android:layout_gravity=\"center_horizontal\"\n                    android:background=\"@drawable/radius\"\n                    android:textColor=\"@color/background\"\n                    android:textSize=\"@dimen/text_retry\"\n                    app:backgroundTint=\"@color/dark_white\"\n                    android:fontFamily=\"@font/ys_display_medium\"\n                    android:textAllCaps=\"false\"/>\n            </LinearLayout>\n        </ScrollView>\n\n        <LinearLayout\n            android:id=\"@+id/emptyStateContainer\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"match_parent\"\n            android:orientation=\"vertical\"\n            android:gravity=\"center_horizontal\"\n            android:background=\"@color/background\"\n            android:visibility=\"gone\">\n\n            <ImageView\n                android:id=\"@+id/emptyImageView\"\n                android:layout_width=\"@dimen/error_size\"\n                android:layout_height=\"@dimen/error_size\"\n                android:src=\"@drawable/empty\"\n                android:visibility=\"visible\"\n                android:layout_marginTop=\"@dimen/margine_top_error\"\n                android:background=\"@color/background\"/>\n\n            <TextView\n                android:id=\"@+id/placeholderMessage\"\n                android:layout_width=\"wrap_content\"\n                android:layout_height=\"wrap_content\"\n                android:textSize=\"@dimen/text_error\"\n                android:textStyle=\"bold\"\n                android:fontFamily=\"@font/ys_display_medium\"\n                android:textColor=\"@color/dark_white\"\n                android:text=\"@string/text_empty\"\n                android:layout_marginTop=\"@dimen/activity_search_padding\"\n                android:visibility=\"visible\"\n                android:background=\"@color/background\" />\n        </LinearLayout>\n\n        <LinearLayout\n            android:id=\"@+id/errorStateContainer\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"wrap_content\"\n            android:orientation=\"vertical\"\n            android:gravity=\"center_horizontal\"\n            android:background=\"@color/background\"\n            android:layout_marginLeft=\"@dimen/button_size\"\n            android:layout_marginRight=\"@dimen/button_size\"\n            android:visibility=\"gone\">\n\n            <ImageView\n                android:id=\"@+id/errorImageView\"\n                android:layout_width=\"@dimen/error_size\"\n                android:layout_height=\"@dimen/error_size\"\n                android:src=\"@drawable/error\"\n                android:visibility=\"visible\"\n                android:layout_marginTop=\"@dimen/margine_top_error\"\n                android:background=\"@color/background\"/>\n\n            <TextView\n                android:id=\"@+id/connectionErrorMessage\"\n                android:layout_width=\"wrap_content\"\n                android:layout_height=\"wrap_content\"\n                android:textSize=\"@dimen/text_error\"\n                android:textStyle=\"bold\"\n                android:fontFamily=\"@font/ys_display_medium\"\n                android:textColor=\"@color/dark_white\"\n                android:text=\"@string/text_error\"\n                android:layout_marginTop=\"@dimen/button_corner_radius\"\n                android:gravity=\"center_horizontal\"\n                android:visibility=\"visible\"\n                android:background=\"@color/background\" />\n\n            <Button\n                android:id=\"@+id/retryButton\"\n                android:layout_width=\"wrap_content\"\n                android:layout_height=\"match_parent\"\n                android:layout_marginTop=\"@dimen/button_size\"\n                android:text=\"@string/text_retry\"\n                android:background=\"@drawable/radius\"\n                android:textColor=\"@color/background\"\n                android:textSize=\"@dimen/text_retry\"\n                app:backgroundTint=\"@color/dark_white\"\n                android:fontFamily=\"@font/ys_display_medium\"\n                android:textAllCaps=\"false\"/>\n        </LinearLayout>\n    </FrameLayout>\n</LinearLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/activity_searcch.xml b/app/src/main/res/layout/activity_searcch.xml
--- a/app/src/main/res/layout/activity_searcch.xml	(revision 59dac1da4c9d31be82ba8aeb02cd01045fe65364)
+++ b/app/src/main/res/layout/activity_searcch.xml	(date 1753962267503)
@@ -1,5 +1,6 @@
 <LinearLayout
     style="@style/Base.Theme.PlaylistMakerr"
+    android:id="@+id/search"
     android:layout_width="match_parent"
     android:layout_height="match_parent"
     android:orientation="vertical"
Index: app/src/main/java/com/example/playlistmaker/data/dto/TrackDTO.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.playlistmaker.data.dto\n\ndata class TrackDTO(\n    val trackId: Int,\n    val trackName: String?,\n    val artistName: String?,\n    val trackTimeMillis: Long?,\n    val artworkUrl100: String?,\n    val collectionName: String?,\n    val releaseDate: String?,\n    val primaryGenreName: String?,\n    val country: String?,\n    val previewUrl: String?\n\n)
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/playlistmaker/data/dto/TrackDTO.kt b/app/src/main/java/com/example/playlistmaker/data/dto/TrackDTO.kt
--- a/app/src/main/java/com/example/playlistmaker/data/dto/TrackDTO.kt	(revision 59dac1da4c9d31be82ba8aeb02cd01045fe65364)
+++ b/app/src/main/java/com/example/playlistmaker/data/dto/TrackDTO.kt	(date 1753962267499)
@@ -11,5 +11,4 @@
     val primaryGenreName: String?,
     val country: String?,
     val previewUrl: String?
-
 )
\ No newline at end of file
